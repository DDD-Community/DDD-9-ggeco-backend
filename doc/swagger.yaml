openapi: 3.0.0
info:
  contact:
    email: snowmerak@outlook.com
    name: snowmerak
  description: The ggeco API Documentation
  title: ggeco
  version: 1.0.0
paths:
  /api/badge:
    delete:
      description: Delete Badge
      parameters:
      - in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Delete Badge
    get:
      description: Get Badge data by badge id
      parameters:
      - in: query
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadgesBadge'
          description: OK
      summary: Get Badge data
    post:
      description: Add Badge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BadgesAddBadgeRequest'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Add Badge
  /api/badge/image:
    post:
      description: Update Badge Image
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BadgesUpdateBadgeImageRequest'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Update Badge Image
  /api/badge/name:
    get:
      description: Get Badge data by badge name
      parameters:
      - in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BadgesBadge'
                type: array
          description: OK
      summary: Get Badge data
    post:
      description: Update Badge Name
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BadgesUpdateBadgeNameRequest'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Update Badge Name
  /api/badge/summary:
    post:
      description: Update Badge Summary
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BadgesUpdateBadgeSummaryRequest'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Update Badge Summary
  /api/badges:
    get:
      description: Get Badge data by author id or badge name
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/BadgesBadge'
                type: array
          description: OK
      summary: Get Badge List
  /api/course:
    get:
      description: Get Course data by course id
      parameters:
      - in: query
        name: course_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoursesCourse'
          description: OK
      summary: Get Course data
  /api/course/list:
    get:
      description: Get Course data by author id or course name
      parameters:
      - in: query
        name: author_id
        required: true
        schema:
          type: string
      - in: query
        name: course_name
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CoursesCourse'
                type: array
          description: OK
      summary: Get Course List
  /api/course/name:
    post:
      description: Update Course Name
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoursesUpdateCourseNameRequest'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Update Course Name
  /api/course/review:
    post:
      description: Update Course Review
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CoursesUpdateCourseReviewRequest'
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Update Course Review
  /api/image:
    get:
      description: Get Path of the Image
      parameters:
      - in: query
        name: name
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: OK
        "500":
          description: Internal Server Error
      summary: Get Image Path
  /api/place:
    get:
      description: Get Place details from Google Maps API or cached
      parameters:
      - in: query
        name: place_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlaceGetPlaceResponse'
          description: OK
        "500":
          description: Internal Server Error
      summary: Get place details
  /api/places:
    get:
      description: Search Places from google maps api
      parameters:
      - in: query
        name: query
        required: true
        schema:
          type: string
      - in: query
        name: lang
        schema:
          type: string
      - in: query
        name: latitude
        schema:
          type: number
      - in: query
        name: longitude
        schema:
          type: number
      - in: query
        name: radius
        schema:
          type: integer
      - in: query
        name: opennow
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MapsSearchTextResponse'
                type: array
          description: OK
        "500":
          description: Internal Server Error
      summary: Search Places
components:
  schemas:
    BadgesAddBadgeRequest:
      properties:
        image:
          type: string
        name:
          type: string
        summary:
          type: string
      required:
      - name
      - summary
      - image
      type: object
    BadgesBadge:
      properties:
        id:
          $ref: '#/components/schemas/SqlserverUUID'
        image:
          type: string
        name:
          type: string
        summary:
          type: string
      type: object
    BadgesUpdateBadgeImageRequest:
      properties:
        badge_id:
          type: string
        image:
          type: string
      required:
      - badge_id
      - image
      type: object
    BadgesUpdateBadgeNameRequest:
      properties:
        badge_id:
          type: string
        name:
          type: string
      required:
      - badge_id
      - name
      type: object
    BadgesUpdateBadgeSummaryRequest:
      properties:
        badge_id:
          type: string
        summary:
          type: string
      required:
      - badge_id
      - summary
      type: object
    CoursesCourse:
      properties:
        author_id:
          $ref: '#/components/schemas/SqlserverUUID'
        id:
          $ref: '#/components/schemas/SqlserverUUID'
        name:
          type: string
        reg_date:
          type: string
        review:
          type: string
      type: object
    CoursesUpdateCourseNameRequest:
      properties:
        course_id:
          type: string
        name:
          type: string
      required:
      - course_id
      - name
      type: object
    CoursesUpdateCourseReviewRequest:
      properties:
        course_id:
          type: string
        review:
          type: string
      required:
      - course_id
      - review
      type: object
    MapsLocation:
      properties:
        lat:
          type: number
        lng:
          type: number
      type: object
    MapsPlacePhoto:
      properties:
        height:
          type: integer
        html_attributions:
          items:
            type: string
          type: array
        photo_path:
          type: string
        photo_reference:
          type: string
        width:
          type: integer
      type: object
    MapsReview:
      properties:
        author_name:
          type: string
        language:
          type: string
        rating:
          type: integer
        text:
          type: string
      type: object
    MapsSearchPlaceIdResponse:
      properties:
        business_status:
          type: string
        formatted_address:
          type: string
        geometry_location:
          $ref: '#/components/schemas/MapsLocation'
        name:
          type: string
        opening_hours:
          items:
            $ref: '#/components/schemas/MapsTimeShift'
          type: array
        phone:
          type: string
        photos:
          items:
            $ref: '#/components/schemas/MapsPlacePhoto'
          type: array
        place_id:
          type: string
        reviews:
          items:
            $ref: '#/components/schemas/MapsReview'
          type: array
        types:
          items:
            type: string
          type: array
      type: object
    MapsSearchTextResponse:
      properties:
        business_status:
          type: string
        formatted_address:
          type: string
        geometry:
          properties:
            location:
              properties:
                lat:
                  type: number
                lng:
                  type: number
              type: object
          type: object
        name:
          type: string
        photos:
          items:
            $ref: '#/components/schemas/MapsPlacePhoto'
          type: array
        place_id:
          type: string
        rating:
          type: number
        types:
          items:
            type: string
          nullable: true
          type: array
        user_ratings_total:
          type: integer
      type: object
    MapsTimeShift:
      properties:
        close_day:
          type: string
        close_time:
          type: string
        open_day:
          type: string
        open_time:
          type: string
      type: object
    PlaceGetPlaceResponse:
      properties:
        Data:
          $ref: '#/components/schemas/MapsSearchPlaceIdResponse'
        id:
          type: string
        last_update:
          format: date-time
          type: string
      type: object
    SqlserverUUID:
      items:
        minimum: 0
        type: integer
      type: array
